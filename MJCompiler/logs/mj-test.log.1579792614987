INFO  16:14:01,276 - Compiling source file: D:\Nedeljko_ETF\IV godina\PP1\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  16:14:01,359 - #2 program
INFO  16:14:01,359 - #15 MJProgram
INFO  16:14:01,359 - #43 const
INFO  16:14:01,361 - #15 char
INFO  16:14:01,362 - #15 r
INFO  16:14:01,363 - #12 =
INFO  16:14:01,363 - #16 a
INFO  16:14:01,364 - #5 ;
INFO  16:14:01,367 - #43 const
INFO  16:14:01,368 - #15 char
INFO  16:14:01,370 - #15 m
INFO  16:14:01,370 - #12 =
INFO  16:14:01,370 - #16 a
INFO  16:14:01,371 - #8 ,
INFO  16:14:01,371 - #15 n
INFO  16:14:01,371 - #12 =
INFO  16:14:01,371 - #16 s
INFO  16:14:01,371 - #5 ;
INFO  16:14:01,371 - #15 int
INFO  16:14:01,372 - #15 b
INFO  16:14:01,373 - #8 ,
INFO  16:14:01,373 - #15 x
INFO  16:14:01,373 - #25 [
INFO  16:14:01,373 - #26 ]
INFO  16:14:01,373 - #8 ,
INFO  16:14:01,373 - #15 y
INFO  16:14:01,374 - #25 [
INFO  16:14:01,374 - #26 ]
INFO  16:14:01,374 - #8 ,
INFO  16:14:01,374 - #15 z
INFO  16:14:01,374 - #25 [
INFO  16:14:01,375 - #26 ]
INFO  16:14:01,375 - #5 ;
INFO  16:14:01,375 - #15 char
INFO  16:14:01,376 - #15 niz
INFO  16:14:01,376 - #25 [
INFO  16:14:01,376 - #26 ]
INFO  16:14:01,376 - #5 ;
INFO  16:14:01,376 - #43 const
INFO  16:14:01,376 - #15 bool
INFO  16:14:01,376 - #15 flag
INFO  16:14:01,377 - #12 =
INFO  16:14:01,377 - #17 true
INFO  16:14:01,377 - #8 ,
INFO  16:14:01,377 - #15 k
INFO  16:14:01,377 - #12 =
INFO  16:14:01,377 - #17 false
INFO  16:14:01,377 - #5 ;
INFO  16:14:01,378 - #43 const
INFO  16:14:01,379 - #15 int
INFO  16:14:01,379 - #15 o
INFO  16:14:01,379 - #12 =
INFO  16:14:01,379 - #14 0
INFO  16:14:01,379 - #8 ,
INFO  16:14:01,379 - #15 p
INFO  16:14:01,379 - #12 =
INFO  16:14:01,379 - #14 1
INFO  16:14:01,379 - #5 ;
INFO  16:14:01,380 - #15 char
INFO  16:14:01,380 - #15 c
INFO  16:14:01,380 - #5 ;
INFO  16:14:01,380 - #3 {
INFO  16:14:01,380 - #15 int
INFO  16:14:01,381 - #15 ml
INFO  16:14:01,381 - #6 (
INFO  16:14:01,382 - #7 )
INFO  16:14:01,382 - #3 {
INFO  16:14:01,382 - #10 return
INFO  16:14:01,389 - #14 1
INFO  16:14:01,389 - #5 ;
INFO  16:14:01,390 - #4 }
INFO  16:14:01,390 - #15 int
INFO  16:14:01,391 - #15 sl
INFO  16:14:01,391 - #6 (
INFO  16:14:01,391 - #7 )
INFO  16:14:01,391 - #3 {
INFO  16:14:01,391 - #4 }
INFO  16:14:01,392 - #15 bool
INFO  16:14:01,392 - #15 kl
INFO  16:14:01,392 - #6 (
INFO  16:14:01,392 - #15 int
INFO  16:14:01,392 - #15 intidzer
INFO  16:14:01,392 - #8 ,
INFO  16:14:01,392 - #15 int
INFO  16:14:01,392 - #15 klo
INFO  16:14:01,392 - #7 )
INFO  16:14:01,393 - #3 {
INFO  16:14:01,393 - #15 kl
INFO  16:14:01,393 - #6 (
INFO  16:14:01,393 - #14 3
INFO  16:14:01,393 - #8 ,
INFO  16:14:01,394 - #16 a
INFO  16:14:01,394 - #7 )
INFO  16:14:01,394 - #5 ;
INFO  16:14:01,394 - #10 return
INFO  16:14:01,395 - #17 true
INFO  16:14:01,395 - #5 ;
INFO  16:14:01,395 - #4 }
INFO  16:14:01,395 - #15 bool
INFO  16:14:01,395 - #15 ll
INFO  16:14:01,396 - #6 (
INFO  16:14:01,396 - #7 )
INFO  16:14:01,396 - #3 {
INFO  16:14:01,396 - #10 return
INFO  16:14:01,396 - #17 false
INFO  16:14:01,396 - #5 ;
INFO  16:14:01,396 - #4 }
INFO  16:14:01,396 - #13 void
INFO  16:14:01,396 - #15 sss
INFO  16:14:01,396 - #6 (
INFO  16:14:01,397 - #7 )
INFO  16:14:01,397 - #3 {
INFO  16:14:01,397 - #18 if
INFO  16:14:01,397 - #6 (
INFO  16:14:01,397 - #15 flag
INFO  16:14:01,397 - #7 )
INFO  16:14:01,398 - #3 {
INFO  16:14:01,398 - #15 b
INFO  16:14:01,398 - #20 ++
INFO  16:14:01,398 - #5 ;
INFO  16:14:01,399 - #4 }
INFO  16:14:01,399 - #18 if
INFO  16:14:01,399 - #6 (
INFO  16:14:01,399 - #15 flag
INFO  16:14:01,399 - #34 ||
INFO  16:14:01,400 - #15 flag
INFO  16:14:01,400 - #35 &&
INFO  16:14:01,400 - #15 flag
INFO  16:14:01,400 - #35 &&
ERROR 16:14:01,400 - 
Sintaksna greska na liniji 65
ERROR 16:14:01,400 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 65
ERROR 16:14:01,418 - Parsiranje NIJE uspesno zavrseno!
